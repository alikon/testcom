
	/**
	 * On after log action purge
	 *
	 * Method is called after user request to clean action log items.
	 *
	 * @param   array  $group  Holds the group name.
	 *
	 * @return  void
	 *
	 * @since   3.9.4
	 */
	public function onTaskExecuteSuccess($event)
	{
		$context = 'com_scheduler';

		if (!$this->checkLoggable($context))
		{
			return;
		}

		$snapshot =$event->getContent();
		$context = 'scheduler';
		$user    = Factory::getUser();
		$message = [
			'action'   => 'Completed',
			'taskname' => $event->get('title'),
			'tasklink' => 'index.php?option=com_scheduler&view=tasks&filter[search]=id:' . $event->get('id'),
			'duration' => round($snapshot['duration'], 2),
			'times' => $event->get('times_executed'),
		];
		$this->addLog([$message], 'PLG_ACTIONLOG_JOOMLA_TASK', $context, $user->id);
	}

	public function onTaskRoutineWillResume($event)
	{
		$context = 'com_scheduler';

		if (!$this->checkLoggable($context))
		{
			return;
		}

		$snapshot = $event->getContent();
		$context  = 'scheduler';
		$user     = Factory::getUser();
		$message = [
			'action'   => 'Will Resume',
			'taskname' => $event->get('title'),
			'tasklink' => 'index.php?option=com_scheduler&view=tasks&filter[search]=id:' . $event->get('id'),
			'duration' => round($snapshot['duration'], 2),
			'times' => $event->get('times_executed'),
		];
		$this->addLog([$message], 'PLG_ACTIONLOG_JOOMLA_TASK_RESUME', $context, $user->id);
	}
